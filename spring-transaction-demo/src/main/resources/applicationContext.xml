<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="jdbc.properties"/>
    <!--    datasource 链接数据库-->
    <bean id="datasource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close" init-method="init">

        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>

    </bean>

    <!--    sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource"/>
        <property name="configLocation" value="mybatis.xml"/>
    </bean>

    <!--    创建 dao 对象，Sqlsession的 getMapper-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--        指定 SqlSessionFactoryBeanName-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--        指定包名-->
        <property name="basePackage" value="com.coderunning.dao"/>

    </bean>

    <bean id="buyGoodsService" class="com.coderunning.service.impl.BuyGoodsServiceImpl">
        <property name="goodsDao" ref="goodsDao"/>
        <property name="salesDao" ref="salesDao"/>
    </bean>

    <!--    声明事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>
    <!--    开启事务注解驱动， 让 spring 管理事务， 创建代理对象-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>